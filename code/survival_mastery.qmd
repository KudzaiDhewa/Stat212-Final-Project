---
title: "survival_mastery"
author: "Tam Nguyen"
format: html
editor: visual
---

```{r libs}
library(tidyverse)
library(httr) # making HTTP requests to web APIs and web servers
library(jsonlite) #to read json files
library(urltools)
library(tidyverse)
library(dplyr)
library(readr)
```

```{r functions}

get_info <- function(url, api_key){
  Sys.sleep(6)
  response <- GET(url, add_headers(`Authorization` = paste("Bearer", api_key),
                                  `Accept` = "application/vnd.api+json"))

# Check for a successful response
if (status_code(response) == 200) {
    # Parse the JSON response
    data <- fromJSON(content(response, as = "text"))
    # Print or process the seasons data
    # print(data)
} else {
    # Print the error message
    print(paste("Error:", status_code(response)))
    print(content(response, as = "text"))
}
  
  return(data)
}



multi_player_info_fetch <- function(seasonId, players){
  

  Sys.sleep(6)
  players_str = str_c(players, collapse = ",")
  url <- paste0("https://api.pubg.com/shards/steam/seasons/", seasonId, "/gameMode/squad/players?filter[playerIds]=", players_str) 
  
  print(url)
  
  data_temp_multi <- get_info(url, api_key)
  return(data_temp_multi$data$attributes$gameModeStats$squad)
  
  
}
```

```{r api_key}
api_key <- "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlNjI0NjI4MC03MjMyLTAxM2QtOGU4MS0yMjViNDYzNmQwYzgiLCJpc3MiOiJnYW1lbG9ja2VyIiwiaWF0IjoxNzI5NTUzNjUxLCJwdWIiOiJibHVlaG9sZSIsInRpdGxlIjoicHViZyIsImFwcCI6InB1YmdfYXBpXzIifQ.TPRaU-Yrrai0kza1Wb8-Kg8gBIy__hz37cStm24B1xI"

```

```{r season_ID}
# url_season <- "https://api.pubg.com/shards/steam/seasons"
# season_data <- get_info(url_season, api_key)

```

```{r}
# seasons <- season_data$data %>% 
#   select(id) %>% 
#   write_csv("../seasons.csv")
#   
# 
# seasons
```

```{r}
# player_season_stats_url <- "https://api.pubg.com/shards/steam/players/account.1532a51b64104c089a027ad4c74bab18/seasons/division.bro.official.pc-2018-33/"
```

```{r}
# multi_player_season_stats_url <- "https://api.pubg.com/shards/steam/seasons/division.bro.official.pc-2018-33/gameMode/squad/players?filter[playerIds]=account.9bfc08014e414e1aad39bfceb95e0435,account.e87e3239d3f94ae6a7484a4a4a9c62ea,account.998b828f4c204f00bb648c1658b15669"
```

```{r}
# data_temp <- get_info(player_season_stats_url, api_key)
# data_temp
```

```{r}
# data_temp_multi <- get_info(multi_player_season_stats_url, api_key)
# data_temp_multi
```

```{r}
# data_temp_multi$data$attributes$gameModeStats$squad
```

```{r}
# data_temp_multi$data$relationships$player$data$id
```

```{r}
#total data for given season
data.frame(data_temp$data$attributes$gameModeStats$squad)
# todo: add playerid and season id to the data, vars of interest may be boosts, damagedealt, daily kills, heashots, longestKill (maybe sniper),longestSurvivalTime,  rideDistance, revives,  swimDistance, timeSurvived, walkDistance, weaponsAcquired

```

```{r cluster_ids}

player_cluster <- read_csv("../clustered_players.csv") %>% 
  filter(gameMode == "squad") %>% 
  select(cluster, accountId)


player_lvls <- data.frame(list(
  cluster = c(1, 2, 3, 4),
  level = c( "Good", "Pro" ,"Beginner", "Intermediate")
))

player_cluster %>% 
  distinct(accountId)
```

```{r}
last_6_seasons <- seasons[1:6]
last_6_seasons
```

```{r}
season_1 <- read_csv("../data/seasonal_data_1.csv") %>% 
            filter(roundsPlayed > 0) %>% 
            left_join(player_lvls, by = "cluster") %>% 
            mutate(season = "n")

season_2 <- read_csv("../data/seasonal_data_2.csv") %>% 
            filter(roundsPlayed > 0) %>% 
            left_join(player_lvls, by = "cluster")%>% 
            mutate(season = "n-1")

season_3 <- read_csv("../data/seasonal_data_3.csv") %>% 
            filter(roundsPlayed > 0) %>% 
            left_join(player_lvls, by = "cluster")%>% 
            mutate(season = "n-2")

season_4 <- read_csv("../data/seasonal_data_4.csv") %>% 
            filter(roundsPlayed > 0) %>% 
            left_join(player_lvls, by = "cluster") %>% 
            mutate(season = "n-3")

season_5 <- read_csv("../data/seasonal_data_5.csv") %>% 
            filter(roundsPlayed > 0) %>% 
            left_join(player_lvls, by = "cluster")%>% 
            mutate(season = "n-4")

season_6 <- read_csv("../data/seasonal_data_6.csv") %>% 
            filter(roundsPlayed > 0) %>% 
            left_join(player_lvls, by = "cluster")%>% 
            mutate(season = "n-5")

```

```{r}
seasons <- list(season_1,season_2,season_3, season_4, season_5, season_6)
df_init <- data.frame()

for (df in seasons){
  
  df_init <- bind_rows(df_init, df)
  
}


df_all_seasons <- df_init 

df_all_seasons
```

```{r}
#ride distance: pro players tend to use vehicles to hunt.
df_all_seasons %>% 
  mutate(avg_rideDist = rideDistance/roundsPlayed) %>% 
  ggplot(aes(x = as.factor(cluster), y = avg_rideDist))+
  geom_boxplot()+
  facet_wrap(~season)
```

```{r}
season_1 %>% 
  filter(roundsPlayed != 0) %>% 
  mutate(avg_wDist = walkDistance/roundsPlayed) %>% 
  ggplot(aes(x = as.factor(cluster), y = avg_wDist)) +
  geom_boxplot()
```

```{r functions}

trendlines <- function(data, var){
  data %>% 
  ggplot(aes(y = timeSurvived/roundsPlayed, x = {{var}}/roundsPlayed, color = level))+
  geom_point()+
  geom_smooth(method = "lm")+
  facet_wrap(~season)
  
}

draw_round_avg <- function(data,var){
  data %>%
    mutate(avg = {{var}}/roundsPlayed) %>% 
    ggplot(aes(x = fct_rev(fct_reorder(level, avg)), y = avg))+
    geom_boxplot()+
    facet_wrap(~season)
  
}


draw_overall <- function(data, var){
  data %>% 
    ggplot(aes(x = fct_rev(fct_reorder(level, {{var}})), y = {{var}})) +
    geom_boxplot()+
    facet_wrap(~season)
}

```

```{r win_loss_ratio}

df_all_seasons %>% 
  write_csv("../seasonal_survival_data.csv")
```

```{r}
df_all_seasons %>%
    mutate(avg = wins/roundsPlayed) %>% 
    filter(avg < 0.5) %>% 
    ggplot(aes(x = fct_rev(fct_reorder(level, avg)), y = avg))+
    geom_boxplot()+
    facet_wrap(~season) +
    theme_classic() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1),
          panel.grid.major.x = element_blank())+
    labs( y = "win ratio",
          x = "",
          title = "Boxplots of Win Ratio by Player Level Across Seasons",
          subtitle = "*outliers have been removed from plot (<0.5)")

    
```

```{r}
df_all_seasons %>%
    mutate(avg = losses/roundsPlayed) %>% 
    filter(avg > 0.7) %>%
    ggplot(aes(x = fct_rev(fct_reorder(level, avg)), y = avg))+
    geom_boxplot()+
    facet_wrap(~season) +
    theme_classic()+
    theme(axis.text.x = element_text(angle = 45, hjust = 1))+
    labs( y = "loss ratio",
          x = "",
          title = "Boxplots of Loss Ratio by Player Level Across Seasons",
           subtitle = "*outliers have been removed from plot (>0.7)")
```

Observations:

-   The ratio plots match our expectation in terms of player expertise, that is, pro and good players are shown to have higher win ratio medians whereas immediate and beginner players are on the lower end. In contrast, the beginners and intermediates observe higher loss ratios.

-   Pro and good players are less likely to have outliers.

    ```{r}
    df_all_seasons %>%
        mutate(avg = losses/roundsPlayed) %>% 
        filter(avg > 0.7) %>%
        ggplot(aes(x = fct_rev(fct_reorder(level, avg)), y = avg))+
        geom_boxplot()+
        facet_wrap(~season) +
        theme_classic()+
        theme(axis.text.x = element_text(angle = 45, hjust = 1))+
        labs( y = "loss ratio",
              x = "",
              title = "Boxplots of Loss Ratio by Player Level Across Seasons",
               subtitle = "*outliers have been removed from plot (>0.7)")
    ```

-   Win ratios tend to be a lot smaller than loss ratios. This makes sense because winning a match tends to be harder than losing a match, even for skillful players.

-   These trends stay consistently over the course of 6 seasons (each lasts for 2 months, so it remains almost static during the span of 1 year)

Conclusion: It appears that our PCA model has successfully grouped players based on relevant indicators. The trends over the 6 seasons sync up with how we expect high level players to perform. Nonetheless, the boxplots also show that the "good" group outperforms the "excellent" group. Perhaps we will need to rethink how we classify the players during the earlier stage.

```{r}
df_all_seasons %>% 
  ggplot(aes(y = timeSurvived/roundsPlayed, x = rideDistance/roundsPlayed))+
  geom_point()+
  geom_smooth(method = "lm")+
  facet_wrap(~season) +
  theme_classic()+
  labs(y = "Avg Time Survived per Round",
       x = "Avg Ride Distance per Round",
       title = "Plots Showing Correlation between Avg Time Survived and Avg Ride Distance",
       subtitle = "*ride distance means distance player traveled in a vehicle")

```

```{r}
df_all_seasons %>% 
  ggplot(aes(y = timeSurvived/roundsPlayed, x = walkDistance/roundsPlayed))+
  geom_point()+
  geom_smooth(method = "lm")+
  facet_wrap(~season) +
  theme_classic()+
  labs(y = "Avg Time Survived per Round",
       x = "Avg Walk Distance per Round",
       title = "Plots Showing Correlation between Avg Time Survived and Avg Walk Distance",
       subtitle = "*walk distance means distance player walked")
```

```{r}
df_all_seasons %>% 
  ggplot(aes(x = swimDistance/roundsPlayed, y = timeSurvived/roundsPlayed))+
  geom_point()+
  geom_smooth()+
  facet_wrap(~season) +
  theme_classic()+
  labs(y = "Avg Time Survived per Round",
       x = "Avg Swim Distance per Round",
       title = "Plots Showing Correlation between Avg Time Survived and Avg Swim Distance",
       subtitle = "*swim distance means distance player swam")

```

Observations:

-   Average walk and ride distances share the same positive correlation with avg survived time, although they do have different slopes: avg walk distance's slope rises faster.

-   Average swim distance seems to be independent of avg time survived. The trend lines shown in the plots are influenced by a few outliers

Conclusions:

-   The positive correlations mean if one is to survive longer, they will have to be on the move constantly. Within the context of PUGB, you will need to consistantly seek good places to hide or find your enemies and good angles to take them down with your weapon. Always moving also protects you in the sense that your enemies become oblivious to your whereabouts. Staying still at one place typically doesn't help much.

-   The slope of avg walk distance being higher compared to that of avg ride distance may mean that walking is more likely to increase your chance of survival, compared to riding a transportation mode. While riding helps you places faster, and shields you from incoming bullets, it also informs enemies within proximity of your presence. Once they know your presence but you do not know theirs, the chances of you being hunted down and eliminated are high.

-   The apparent independence between swimming and surviving is also noticeable. For context, in a map, there will be bodies of water you will have to tread through. There is infrastructure such as bridges but there are usually enemy teams waiting there, ready to eliminate you at any moment, which we call camping. Swimming almost always takes longer time and you are unable to use weapons under water, which makes you vulnerable to someone on higher ground. Perhaps because of this, swimming more is shown to not correlate with surviving more.

```{r}
df_all_seasons %>%
    mutate(avg = rideDistance/roundsPlayed) %>%
    filter(avg<1000) %>%
    ggplot(aes(x = fct_rev(fct_reorder(level, avg)), y = avg))+
    geom_boxplot()+
    facet_wrap(~season) +
    theme_classic()+
    theme(axis.text.x = element_text(angle = 45, hjust = 1))+
    labs( y = "Avg Ride Distance",
          x = "",
          title = "Boxplots of Avg Ride Dist by Player Level Across Seasons",
           subtitle = "*outliers have been removed from plot (<1000)")
```

Observation(s):

-   Unlike the win/loss ration plots above, the trend isn't as quite consistent, much of variation happens among the non-beginner groups. However, in general players with experience have a tendency to ride in a car.

```{r}
df_all_seasons %>%
    mutate(avg = walkDistance/roundsPlayed) %>%
    filter(avg<1000) %>%
    ggplot(aes(x = fct_rev(fct_reorder(level, avg)), y = avg))+
    geom_boxplot()+
    facet_wrap(~season) +
    theme_classic()+
    theme(axis.text.x = element_text(angle = 45, hjust = 1))+
    labs( y = "Avg Walk Distance",
          x = "",
          title = "Boxplots of Avg Walk Dist by Player Level Across Seasons",
           subtitle = "*outliers have been removed from plot (<1000)")
```

Observation:

-   During the n-5th and n-6th seasons, it was clear beginners walked less than the other groups. However, during the most recent 4 seasons they seemed to catch up and to the point where they are pretty much indistinguishable from the more experienced groups

```{r}
df_all_seasons %>%
    mutate(avg = swimDistance/roundsPlayed) %>%
    filter(avg<20) %>%
    ggplot(aes(x = fct_rev(fct_reorder(level, avg)), y = avg))+
    geom_boxplot()+
    facet_wrap(~season) +
    theme_classic()+
    theme(axis.text.x = element_text(angle = 45, hjust = 1))+
    labs( y = "Avg Swim Distance",
          x = "",
          title = "Boxplots of Avg Swim Dist by Player Level Across Seasons",
           subtitle = "*outliers have been removed from plot (<20)")
```

Observation(s):

-   There does not seem to be any significant difference in the avg swim distance for different player levels. The trend stays almost identical for the last 4 seasons

-   However, it is worth noting that there are far way more outliers for the less skilled groups (intermedite and beginners.

Conclusion:

-   Movement patterns are a useful indicator of experience, particularly for identifying trends like increased car usage among skilled players and the narrowing walking distance gap between beginners and experienced players.

<!-- -->

-   Swimming distance appears to have little discriminatory power for classifying player levels due to its uniformity across groups.

-   The presence of more outliers in beginner and intermediate groups highlights their inconsistent gameplay, which could be a distinguishing factor when analyzing player skill levels.

```{r}
df_all_seasons %>% 
  filter(level %in% c("Pro", "Beginner")) %>% 
  ggplot(aes(y = timeSurvived/roundsPlayed, x = rideDistance/roundsPlayed, color = level))+
  # geom_point()+
  geom_smooth(method = "lm")+
  facet_wrap(~season) +
  theme_classic()+
  labs(y = "Avg Time Survived per Round",
       x = "Avg Ride Distance per Round",
       title = "Plots Showing Correlation between Avg Time Survived and Avg Ride Distance",
       subtitle = "*ride distance means distance player traveled in a vehicle")

```

```{r}
df_all_seasons %>% 
  ggplot(aes(x = boosts/roundsPlayed, y = timeSurvived/roundsPlayed, color = level))+
  # geom_point()+
  geom_smooth(method = "lm")+
  facet_wrap(~season)

#the pattern here is interesting: the more boosts the pro players take, the less likely they are to survive. may this be that since they are they are more likely to engage in combat?
```

```{r}
df_all_seasons %>% 
  ggplot(aes(x = weaponsAcquired/roundsPlayed, y = timeSurvived/roundsPlayed, color = level))+
  # geom_point()+
  geom_smooth(method = "lm")+
  facet_wrap(~season)
```

```{r}
df_all_seasons %>% 
  ggplot(aes(x = kills/roundsPlayed, y = timeSurvived/roundsPlayed, color = level))+
  # geom_point()+
  geom_smooth(method = "lm")+
  facet_wrap(~season)
```

```{r}
season_1 %>% 
  ggplot(aes(x = vehicleDestroys/roundsPlayed, y = timeSurvived/roundsPlayed))+
  geom_point()+
  geom_smooth()
```

```{r}

df_all_seasons %>% 
  ggplot(aes(x = dBNOs/roundsPlayed, y = timeSurvived/roundsPlayed, color = level))+
  # geom_point()+
  geom_smooth(method = "lm")+
  facet_wrap(~season)
```
